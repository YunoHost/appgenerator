#!/bin/bash
### App file generated with YoloGen, the YunoHost app generator, version {{ data['GENERATOR_VERSION'] }}.

{% if data.generator_mode == 'tutorial' -%}
# This is the tutorial version of the app.
# It contains extra commands to explain what should be done in case you want to adjust some part of the script.
# Once you are done, you may remove them.
{% endif %}

source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

{% if data.install_dir %}
#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression "Restoring the app main directory..."

ynh_restore "$install_dir"
{% endif %}

{% if data.data_dir -%}
#=================================================
# RESTORE THE DATA DIRECTORY
#=================================================
ynh_script_progression "Restoring the data directory..."

ynh_restore "$data_dir"
{% endif %}

{% if data.database -%}
{% if data.datase == 'mysql' -%}
#=================================================
# RESTORE THE MYSQL DATABASE
#=================================================
ynh_script_progression "Restoring the MySQL database..."

ynh_mysql_db_shell < ./db.sql
{% endif %}

{% if data.database == 'postgresql' -%}
#=================================================
# RESTORE THE POSTGRESQL DATABASE
#=================================================
ynh_script_progression "Restoring the PostgreSQL database..."

ynh_psql_db_shell < ./db.sql
{% endif %}
{% endif %}

#=================================================
# RESTORE SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Restoring system configurations related to $app..."

{% if data.generator_mode == 'tutorial' -%}
### This should be a symetric version of what happens in the install script
{% endif %}

{% if data.main_technology == "php" -%}
ynh_restore "/etc/php/$php_version/fpm/pool.d/$app.conf"
{% endif %}

ynh_restore "/etc/nginx/conf.d/$domain.d/$app.conf"

{% if data.main_technology not in ["php", "none"] -%}
ynh_restore "/etc/systemd/system/$app.service"
systemctl enable "$app.service" --quiet

yunohost service add "$app" --description="A short description of the app" --log="/var/log/$app/$app.log"
{% endif %}

{% if data.use_logrotate -%}
ynh_restore "/etc/logrotate.d/$app"
{% endif %}

{% if data.use_fail2ban -%}
ynh_restore "/etc/fail2ban/jail.d/$app.conf"
ynh_restore "/etc/fail2ban/filter.d/$app.conf"
ynh_systemctl --action=restart --service_name=fail2ban
{% endif %}

#=================================================
# RESTORE VARIOUS FILES
#=================================================

{% if data.use_cron -%}
ynh_restore "/etc/cron.d/$app"
{% endif %}

{% if data.generator_mode == 'tutorial' -%}
### For apps with huge logs, you might want to not backup logs every time:
### The mkdir call is just here in case the log directory was not backed up.
### mkdir -p "/var/log/$app"
### chown $app:www-data "/var/log/$app"
### ynh_restore_file --src_path="/var/log/$app/" --not_mandatory
###
### For other apps, the simple way is better:
{% endif %}
ynh_restore "/var/log/$app/"

#=================================================
# RELOAD NGINX AND PHP-FPM OR THE APP SERVICE
#=================================================
ynh_script_progression "Reloading NGINX web server and $app's service..."

{% if data.main_technology not in ["php", "none"] -%}
ynh_systemctl --service="$app" --action="start"
{% endif %}
{% if data.main_technology == "php" -%}
ynh_systemctl --service=php$php_version-fpm --action=reload
{% endif %}

ynh_systemctl --service=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Restoration completed for $app"
